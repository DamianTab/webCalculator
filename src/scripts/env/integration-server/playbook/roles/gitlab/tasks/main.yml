---

- name: "Create Downloads folder"
  file:
    path: "{{ destination }}"
    state: directory

- name: "Update repositories cache." 
  apt:
    update_cache: yes


- name: "Safe system upgrade via aptitude."
  apt: 
    upgrade: safe

- name: "Check if GitLab is already installed."
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file


- name: "Install GitLab dependencies."
  package: name={{ item }} state=present
  with_items:
    - openssh-server
    - ca-certificates
    - curl
    - openssl
    - tzdata

    
- name: "Download GitLab repository installation script."
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    validate_certs: "{{ gitlab_download_validate_certs }}"
  when: not gitlab_file.stat.exists
  

- name: "Install GitLab repository."
  command: bash /tmp/gitlab_install_repository.sh
  when: not gitlab_file.stat.exists


- name: "Define the Gitlab package name."
  set_fact:
    gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
  when: gitlab_version != ''


- name: "Install GitLab"
  package:
    name: "{{ gitlab_package_name | default(gitlab_edition) }}"
    state: present
  when: not gitlab_file.stat.exists


- name: "Copy custom gitlab configuration file."
  ansible.builtin.copy:
    src: ./scripts/gitlab.rb
    dest: /etc/gitlab
  when: not gitlab_file.stat.exists


- name: "Reconfigure and restart gitlab"
  shell: |
    gitlab-ctl reconfigure
    gitlab-ctl restart unicorn
    gitlab-ctl restart
  when: not gitlab_file.stat.exists

- name: "Transfer gitlab initialization script"
  copy: src=./scripts/init_project.sh dest={{HOME}} mode=0755
  when: not gitlab_file.stat.exists

- name: "Execute gitlab initialization script"
  command: sh {{HOME}}/init_project.sh
  when: not gitlab_file.stat.exists